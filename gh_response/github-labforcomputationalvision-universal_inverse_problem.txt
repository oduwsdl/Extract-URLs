{ "id": 282042551, "node_id": "MDEwOlJlcG9zaXRvcnkyODIwNDI1NTE=", "name": "universal_inverse_problem", "full_name": "LabForComputationalVision/universal_inverse_problem", "private": false, "owner": { "login": "LabForComputationalVision", "id": 13207347, "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzMjA3MzQ3", "avatar_url": "https://avatars.githubusercontent.com/u/13207347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LabForComputationalVision", "html_url": "https://github.com/LabForComputationalVision", "followers_url": "https://api.github.com/users/LabForComputationalVision/followers", "following_url": "https://api.github.com/users/LabForComputationalVision/following{/other_user}", "gists_url": "https://api.github.com/users/LabForComputationalVision/gists{/gist_id}", "starred_url": "https://api.github.com/users/LabForComputationalVision/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LabForComputationalVision/subscriptions", "organizations_url": "https://api.github.com/users/LabForComputationalVision/orgs", "repos_url": "https://api.github.com/users/LabForComputationalVision/repos", "events_url": "https://api.github.com/users/LabForComputationalVision/events{/privacy}", "received_events_url": "https://api.github.com/users/LabForComputationalVision/received_events", "type": "Organization", "site_admin": false }, "html_url": "https://github.com/LabForComputationalVision/universal_inverse_problem", "description": "Examples and code for \"Solving linear inverse problems using the prior implicit in a denoiser\", Z Kadkhodaie and EP Simoncelli", "fork": false, "url": "https://api.github.com/repos/LabForComputationalVision/universal_inverse_problem", "forks_url": "https://api.github.com/repos/LabForComputationalVision/universal_inverse_problem/forks", "keys_url": "https://api.github.com/repos/LabForComputationalVision/universal_inverse_problem/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/LabForComputationalVision/universal_inverse_problem/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/LabForComputationalVision/universal_inverse_problem/teams", "hooks_url": "https://api.github.com/repos/LabForComputationalVision/universal_inverse_problem/hooks", "issue_events_url": "https://api.github.com/repos/LabForComputationalVision/universal_inverse_problem/issues/events{/number}", "events_url": "https://api.github.com/repos/LabForComputationalVision/universal_inverse_problem/events", "assignees_url": "https://api.github.com/repos/LabForComputationalVision/universal_inverse_problem/assignees{/user}", "branches_url": "https://api.github.com/repos/LabForComputationalVision/universal_inverse_problem/branches{/branch}", "tags_url": "https://api.github.com/repos/LabForComputationalVision/universal_inverse_problem/tags", "blobs_url": "https://api.github.com/repos/LabForComputationalVision/universal_inverse_problem/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/LabForComputationalVision/universal_inverse_problem/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/LabForComputationalVision/universal_inverse_problem/git/refs{/sha}", "trees_url": "https://api.github.com/repos/LabForComputationalVision/universal_inverse_problem/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/LabForComputationalVision/universal_inverse_problem/statuses/{sha}", "languages_url": "https://api.github.com/repos/LabForComputationalVision/universal_inverse_problem/languages", "stargazers_url": "https://api.github.com/repos/LabForComputationalVision/universal_inverse_problem/stargazers", "contributors_url": "https://api.github.com/repos/LabForComputationalVision/universal_inverse_problem/contributors", "subscribers_url": "https://api.github.com/repos/LabForComputationalVision/universal_inverse_problem/subscribers", "subscription_url": "https://api.github.com/repos/LabForComputationalVision/universal_inverse_problem/subscription", "commits_url": "https://api.github.com/repos/LabForComputationalVision/universal_inverse_problem/commits{/sha}", "git_commits_url": "https://api.github.com/repos/LabForComputationalVision/universal_inverse_problem/git/commits{/sha}", "comments_url": "https://api.github.com/repos/LabForComputationalVision/universal_inverse_problem/comments{/number}", "issue_comment_url": "https://api.github.com/repos/LabForComputationalVision/universal_inverse_problem/issues/comments{/number}", "contents_url": "https://api.github.com/repos/LabForComputationalVision/universal_inverse_problem/contents/{+path}", "compare_url": "https://api.github.com/repos/LabForComputationalVision/universal_inverse_problem/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/LabForComputationalVision/universal_inverse_problem/merges", "archive_url": "https://api.github.com/repos/LabForComputationalVision/universal_inverse_problem/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/LabForComputationalVision/universal_inverse_problem/downloads", "issues_url": "https://api.github.com/repos/LabForComputationalVision/universal_inverse_problem/issues{/number}", "pulls_url": "https://api.github.com/repos/LabForComputationalVision/universal_inverse_problem/pulls{/number}", "milestones_url": "https://api.github.com/repos/LabForComputationalVision/universal_inverse_problem/milestones{/number}", "notifications_url": "https://api.github.com/repos/LabForComputationalVision/universal_inverse_problem/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/LabForComputationalVision/universal_inverse_problem/labels{/name}", "releases_url": "https://api.github.com/repos/LabForComputationalVision/universal_inverse_problem/releases{/id}", "deployments_url": "https://api.github.com/repos/LabForComputationalVision/universal_inverse_problem/deployments", "created_at": "2020-07-23T19:52:24Z", "updated_at": "2023-02-10T02:59:05Z", "pushed_at": "2021-01-09T00:29:30Z", "git_url": "git://github.com/LabForComputationalVision/universal_inverse_problem.git", "ssh_url": "git@github.com:LabForComputationalVision/universal_inverse_problem.git", "clone_url": "https://github.com/LabForComputationalVision/universal_inverse_problem.git", "svn_url": "https://github.com/LabForComputationalVision/universal_inverse_problem", "homepage": "", "size": 77131, "stargazers_count": 25, "watchers_count": 25, "language": "Jupyter Notebook", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "has_discussions": false, "forks_count": 9, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 0, "license": null, "allow_forking": true, "is_template": false, "web_commit_signoff_required": false, "topics": [ ], "visibility": "public", "forks": 9, "open_issues": 0, "watchers": 25, "default_branch": "master", "permissions": { "admin": false, "maintain": false, "push": false, "triage": false, "pull": true }, "temp_clone_token": "", "organization": { "login": "LabForComputationalVision", "id": 13207347, "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzMjA3MzQ3", "avatar_url": "https://avatars.githubusercontent.com/u/13207347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LabForComputationalVision", "html_url": "https://github.com/LabForComputationalVision", "followers_url": "https://api.github.com/users/LabForComputationalVision/followers", "following_url": "https://api.github.com/users/LabForComputationalVision/following{/other_user}", "gists_url": "https://api.github.com/users/LabForComputationalVision/gists{/gist_id}", "starred_url": "https://api.github.com/users/LabForComputationalVision/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LabForComputationalVision/subscriptions", "organizations_url": "https://api.github.com/users/LabForComputationalVision/orgs", "repos_url": "https://api.github.com/users/LabForComputationalVision/repos", "events_url": "https://api.github.com/users/LabForComputationalVision/events{/privacy}", "received_events_url": "https://api.github.com/users/LabForComputationalVision/received_events", "type": "Organization", "site_admin": false }, "network_count": 9, "subscribers_count": 4 }
